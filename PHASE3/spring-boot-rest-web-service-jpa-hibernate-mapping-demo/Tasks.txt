CREATE TABLE users (
    UserID INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(100),
    email VARCHAR(150)
);

CREATE TABLE products (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100),
    price DECIMAL(10,2)
);

CREATE TABLE orders (
    OrderID INT AUTO_INCREMENT PRIMARY KEY,
    UserID INT,
    Amount DECIMAL(10,2),
    CONSTRAINT fk_user FOREIGN KEY (UserID) REFERENCES users(UserID)
);


-- Join table for many-to-many
CREATE TABLE order_products (
    order_id INT,
    product_id INT,
    PRIMARY KEY (order_id, product_id),
    CONSTRAINT fk_order FOREIGN KEY (order_id) REFERENCES orders(OrderID),
    CONSTRAINT fk_product FOREIGN KEY (product_id) REFERENCES products(id)
);



//Task-1: Implement Edit order, update the products list in that order
	@PostMapping("/order-update/{orderId}")
	public Order updateOrder(@PathVariable int orderId, @RequestBody List<Integer> productIds) {
	
		// your code here
		
		return null;
	}
	
//Task-2: Implement User controller. In that have a mapping to get details of a User
	@GetMapping("/user-details/{userId}")
	public Order userDetails(@PathVariable int userId) {
	
		// your code here
		
		return null;
}